# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Book {
  """The author of the book"""
  author: String!

  """Timestamp of when the book was added to the system"""
  createdAt: DateTime!

  """Unique identifier for the book"""
  id: Int!

  """The title of the book"""
  title: String!

  """Timestamp of when the book was last updated"""
  updatedAt: DateTime!
}

input CreateBookInput {
  """The author of the book to create"""
  author: String!

  """The title of the book to create"""
  title: String!
}

input CreateUserInput {
  """Password for the new account (minimum 6 characters)"""
  password: String!

  """Username for the new account (minimum 4 characters)"""
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  """Password of the account to login with"""
  password: String!

  """Username of the account to login with"""
  username: String!
}

type LoginResponse {
  access_token: String!
}

type Mutation {
  createBook(createBookInput: CreateBookInput!): Book!
  createUser(createUserInput: CreateUserInput!): User!
  login(loginInput: LoginInput!): LoginResponse!
  removeBook(id: ID!): Book!
  removeUser(id: ID!): User!
  updateBook(updateBookInput: UpdateBookInput!): Book!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Query {
  book(id: ID!): Book!
  books: [Book!]!
  profile: UserProfile!
  user(id: ID!): User!
  users: [User!]!
}

input UpdateBookInput {
  """The author of the book to create"""
  author: String

  """ID of the book to update"""
  id: ID!

  """The title of the book to create"""
  title: String
}

input UpdateUserInput {
  """ID of the user account to update"""
  id: ID!

  """Password for the new account (minimum 6 characters)"""
  password: String

  """Username for the new account (minimum 4 characters)"""
  username: String
}

type User {
  """Timestamp of when the user account was created"""
  createdAt: DateTime!

  """Unique identifier for the user"""
  id: Int!

  """Timestamp of when the user account was last updated"""
  updatedAt: DateTime!

  """Unique username for the user account"""
  username: String!
}

type UserProfile {
  sub: Int!
  username: String!
}